##########################################################################################################################################
#########################################################                                   ##############################################
#########################################################    WINDOWS AUDITING AND LOGGING   ##############################################
#########################################################                                   ##############################################
##########################################################################################################################################


######################################################### Windows_Logs_4 15 #########################################################

Logging, Auditing and Monitoring are often confused with each other but are distinctly different. Which term refers to real-time analysis and is often accomplished with a Security Event Information Management system (SIEM)?

********************************************************* SOLUTION ********************************************************

Monitoring

######################################################### Primer_Auditing_2 1 #########################################################

What term is most appropriate when referring to the process of reviewing log files or other records for specified period?

********************************************************* SOLUTION ********************************************************

Auditing

######################################################### Primer_Auditing_3 1 #########################################################

"Complete the following path to the Windows System Log which records system events e.g. startup and shutdown: %systemroot%\System32_______________

********************************************************* SOLUTION ********************************************************

%SystemRoot%\System32\Winevt\Logs\System.evtx


######################################################### Primer_Auditing_4 1 #########################################################

Which Windows log contains either success or failures and can be configured to record failed logon attempts?

********************************************************* SOLUTION ********************************************************

Security

######################################################### Primer_Auditing_5 1 #########################################################

"Which Windows account is the only account to have WRITE-APPEND access to Windows event logs?"

Resource: https://os.cybbh.io/public/os/latest/011_windows_auditing_&_logging/primer.html#_7_describe_the_systems_audit_policy


********************************************************* SOLUTION ********************************************************

NT AUTHORITY\SYSTEM

######################################################### Primer_Auditing_6 1 #########################################################

What is parsed in an NTFS object's security descriptor, by the Security Reference Monitor (SRM), to determine if an audit entry will be created in the Windows Security Log?

Research: https://learn.microsoft.com/en-us/windows/win32/secauthz/access-control-lists

********************************************************* SOLUTION ********************************************************

SACL --> Security Access Control List 

######################################################### Primer_Auditing_7 1 #########################################################

Which registry key holds the audit policy configuration? **Hint - Give full path

********************************************************* SOLUTION ********************************************************

HKLM\SECURITY\Policy\PolAdtEv

######################################################### Primer_Auditing_8 1 #########################################################

Which sysinternals tool is used to parse logs?

********************************************************* SOLUTION ********************************************************

PsLogList

(((((((((((((((((((((((())))))))))))))))))))))))
# Define the event ID for process creation
$eventId = 4688

# Define a list of normal locations (you may need to modify this list)
$normalLocations = @("C:\Windows\", "C:\Program Files\", "C:\Program Files (x86)\")

# Get the most recent 1000 events (you can adjust the number)
$events = Get-WinEvent -FilterHashtable @{LogName='Security'; ID=$eventId} -MaxEvents 1000

foreach ($event in $events) {
    # Convert the event to XML to access all its properties easily
    $eventXml = [xml]$event.ToXml()
    $commandLine = $eventXml.Event.EventData.Data | Where-Object { $_.Name -eq "CommandLine" }.'#text'
    $isNormalLocation = $false

    # Check if the command line starts with a path in one of the normal locations
    foreach ($location in $normalLocations) {
        if ($commandLine -like "$location*") {
            $isNormalLocation = $true
            break
        }
    }

    # Output the command line if it's not from a normal location
    if (-not $isNormalLocation) {
        Write-Output "Abnormal Execution: $commandLine"
    }
}



######################################################### Windows_Prefetch_2 10 #########################################################

Enter the name of the questionable file in the prefetch folder.


********************************************************* SOLUTION ********************************************************

PS C:\> Get-Childitem -Path 'C:\Windows\Prefetch' -ErrorAction Continue

BAD_INTENTIONS.EXE-8F2806FC.pf

######################################################### Windows_Prefetch_3 10 #########################################################

What is the creation time of the questionable file in the prefetch folder?

Flag format: mm/dd/yyyy

********************************************************* SOLUTION ********************************************************


Look to the left of the file.... 

2/23/2022  10:01 PM

######################################################### Windows_Recycle_Bin_3 10 #########################################################

Recover the flag from the Recycle Bin. Enter the name of the recycle bin file that contained the contents of the flag, and the contents of the deleted file.

Flag format: filename,contents


********************************************************* SOLUTION ********************************************************

Get-Childitem 'C:\$RECYCLE.BIN' -Recurse -Verbose -Force | select FullName | format-table -wra

Get-Content 'C:\$RECYCLE.BIN\S-1-5-21-2881336348-3190591231-4063445930-1003\$RZDAQ4U.txt'

$RZDAQ4U.txt,DontTrashMeyo

?????????????????????????????????????????????

(Get-Childitem 'C:\$RECYCLE.BIN' -Recurse -Verbose -Force | select FullName | format-table -wrap).count -> Gives the total number of files available

C:\$RECYCLE.BIN\S-1-5-21-2881336348-3190591231-4063445930-1003\$RZDAQ4U.txt

C:\$RECYCLE.BIN\S-1-5-21-2881336348-3190591231-4063445930-1003\$RZVLP5M.txt

Get-Content 'C:\$RECYCLE.BIN\S-1-5-21-2881336348-3190591231-4063445930-1003\$RZDAQ4U.txt'

Get-ChildItem 'C:\$RECYCLE.BIN' -Recurse -Force -Filter '*.txt' | Select-Object FullName | Format-Table -Wrap -AutoSize # Filter files based on txt 


######################################################### Windows_Jump_Lists 10 #########################################################

Find the file in the jump list location that might allow privilege escalation.


********************************************************* SOLUTION ********************************************************

Get-Childitem -Recurse C:\Users\*\AppData\Roaming\Microsoft\Windows\Recent -ErrorAction Continue | select FullName, LastAccessTime 

cd C:\Users\student\AppData\Roaming\Microsoft\Windows\Recent\AutomaticDestinations

######################################################### Primer_Boot_Process_2 1 #########################################################

cd C:\Users\student\AppData\Roaming\Microsoft\Windows\Recent\AutomaticDestinations

ls -force

Get-content .\5f7b5f1e01b81337.automaticDestinations-ms

UIDPWD.txt

((((((((((((((((()))))))))))))))))

5f7b5f1e01b81337.automaticDestinations-ms
5f7b5f1e01b83767.automaticDestinations-ms
f01b4d95cf55d32a.automaticDestinations-ms


Get-content 5f7b5f1e01b83767.automaticDestinations-ms

######################################################### Windows_Logs_4 15 #########################################################

Check event logs for a "flag" string.

Machine: file-server

********************************************************* SOLUTION ********************************************************

Get-Eventlog -LogName System | ft -wrap | findstr /i "flag"



##########################################################################################################################################
#########################################################                                   ##############################################
#########################################################              LINUX BASICS         ##############################################
#########################################################                                   ##############################################
##########################################################################################################################################


######################################################### Linux Basics Bash Logic2 10 #########################################################

The flag resides in $HOME/paths... you just need to determine which flag it is. The flag sits next to a string matching the name of a $PATH/binary on your system.

Hint: The correct binary is not echo
Hint: Compare the contents

********************************************************* SOLUTION ********************************************************

((((((((((((((((((()))))))))))))))))))

jsonpatch
jsonpointer
jsonschema


Vrc0vw7ZUaLBpQp

######################################################### Primer_Auditing_2 1 #########################################################

What term is most appropriate when referring to the process of reviewing log files or other records for specified period?

********************************************************* SOLUTION ********************************************************

Auditing


######################################################### Linux Basics Bash Logic3 15 #########################################################

FILE: /home/garviel/Inquisition_Targets

Identify heresy by comparing the Inquisition_Targets file to members of the Guardsmen group.

HINT: Reformat and clean up the data before it is compared. awk and sort are your best friends!

The flag is the number of heretics on the system.

********************************************************* SOLUTION ********************************************************

# Extract Guardsmen Group Members:
# First, extract the members of the Guardsmen group. This can typically be done by looking at the /etc/group file, but the exact method might depend on how your system manages user groups.

### Answer should be 8 --> guesswork!!! 

getent group guardsmen | awk -F':' '{print $4}' | tr ',' '\n' | sort > guardsmen_sorted.txt

# Prepare Inquisition_Targets File:
# Format and sort the Inquisition_Targets file. The exact command depends on the format of this file. Assuming it's a list that needs to be sorted:

sort /home/garviel/Inquisition_Targets > inquisition_sorted.txt

# Compare the Files:
# Compare the two files to find lines in Inquisition_Targets that are not in Guardsmen members.
# The -23 option with comm suppresses lines unique to the second file (guardsmen) and lines common to both, effectively listing only the heretics.

comm -23 inquisition_sorted.txt guardsmen_sorted.txt

# Count the Number of Heretics:
# To count the number of heretics:

comm -23 inquisition_sorted.txt guardsmen_sorted.txt | wc -l


### Not accepting 32 as the answer

getent group guardsmen | cut -d: -f4 | tr ',' '\n' | sort | uniq > guardsmen_sorted_2.txt

cat /home/garviel/Inquisition_Targets | sort | uniq > inquisition_sorted_2.txt

comm -23 inquisition_sorted_2.txt guardsmen_sorted_2.txt > heretics_2.txt

######################################################### Linux Boot Systemd 3 10 #########################################################

What unit does the graphical.target want to start, based solely on its configuration file?

HINT: Targets deal with which init system? Which machine should you be looking for this flag, on?

NOTE: Use the SystemD Machine for this question.

********************************************************* SOLUTION ********************************************************

# To determine which unit graphical.target wants to start, based solely on its configuration file in a system using systemd (which is the init system in #question), you'll need to check the actual configuration file for graphical.target.

# The graphical.target is typically found in /etc/systemd/system or /lib/systemd/system. You can view the contents of this file to understand what units it is # configured to start.

# Here is the command you would run on the systemd machine:

cat /etc/systemd/system/graphical.target

or 

cat /lib/systemd/system/graphical.target


# In the graphical.target file, look for lines under [Unit] section starting with Wants= or Requires=. These lines will list the units that graphical.target is # configured to start.
# For example, if the file contains a line like Wants=display-manager.service, it means graphical.target wants to start display-manager.service.
# Remember, this needs to be done on a machine with systemd, and you might need appropriate permissions to view these files.

Answer ---> Wants=display-manager.service

######################################################### Linux Boot Systemd 4 10 #########################################################

What dependency to graphical.target will stop it from executing if it fails to start, based solely on its static configuration file?

NOTE: Use the SystemD Machine for this question.

********************************************************* SOLUTION ********************************************************

cat /etc/systemd/system/graphical.target

or 

cat /lib/systemd/system/graphical.target

# In the file, look for lines under the [Unit] section that start with Requires=. The units listed there are essential for graphical.target to execute, and if # any of them fail, graphical.target will not proceed.
# For example, if the file contains a line like Requires=multi-user.target, it means graphical.target requires multi-user.target to start successfully, and if # multi-user.target fails, graphical.target will not execute.
# Remember, you need to perform this on a machine running systemd, and you might need appropriate permissions to view these files.

Description=Graphical Interface
Documentation=man:systemd.special(7)
Requires=multi-user.target
Wants=display-manager.service
Conflicts=rescue.service rescue.target
After=multi-user.target rescue.service rescue.target display-manager.service
AllowIsolate=yes

######################################################### Linux Boot Systemd 5 10 #########################################################

How many wants dependencies does SystemD actually recognize for the default.target

HINT: Use the systemctl command with some arguments to make life easier.

Flag format: #

NOTE: Use the SystemD Machine for this question.

********************************************************* SOLUTION ********************************************************

systemctl list-dependencies default.target --> count only the parent .service ones.... 

systemctl list-dependencies default.target --plain | grep '.wants' | wc -l

systemctl show -p Wants graphical.target

((((((WHY DOESN'T THIS WORK???))))))

######################################################### Linux Boot Systemd 6 10 #########################################################

What is the full path to the binary used for standard message logging?

HINT: Standard message logging is standardized across UNIX systems.

NOTE: As the challenge name suggests, use the SystemD machine for this question.
|||
Flag format: /absolute/path

********************************************************* SOLUTION ********************************************************

/usr/sbin/rsyslogd

which systemd-journald

lookup syslog and then go down that path.... focus on binary for syslog


######################################################### Linux Boot Grub 10 #########################################################

Identify the Linux Kernel being loaded by the Grub, by examining its configuration.

Enter the command used by the Grub, and the full path to the Kernel, as the flag.

Flag Format: command,kernel location

HINT:

Click me for help understanding Grub commands

Machine: Minas_Tirith

********************************************************* SOLUTION ********************************************************


To identify the Linux kernel being loaded by GRUB (the GRand Unified Bootloader), you need to examine the GRUB configuration file. The configuration file typically contains menu entries, each of which may specify a command to load a particular kernel.

The most common location for the GRUB configuration file on modern Linux systems is /boot/grub/grub.cfg or /boot/grub2/grub.cfg. However, this file is often automatically generated by scripts (like update-grub on Debian-based systems), and it is recommended to not edit it directly.

The specific command used by GRUB to load the Linux kernel is typically linux (followed by the path to the kernel) in the menu entry. Here's how you can find the command and kernel location:

Open the terminal.

Use a command like cat or less to view the contents of the GRUB configuration file. For example:

bash
Copy code
cat /boot/grub/grub.cfg
or

bash
Copy code
less /boot/grub/grub.cfg
Look for the menu entries in the file. Each entry starts with menuentry. Inside each menuentry, find the line starting with linux. This line will include the full path to the kernel.

The command and kernel path will look something like this:

bash
Copy code
linux /boot/vmlinuz-<version>-generic root=...
The flag format you provided is command,kernel location. Based on the typical GRUB configuration, your flag might look like:

javascript
Copy code
linux,/boot/vmlinuz-<version>-generic
Replace <version> with the actual version number from the GRUB configuration file.

Please replace the kernel version with the specific version you find in your GRUB configuration file.



$$$$$$$$ 

cat /boot/grub/grub.cfg


linux,/boot/vmlinuz-4.9.0-16-amd64



######################################################### Primer_Boot_Process_9 1 #########################################################

What is the name of the process that spawns SYSTEM?

Research: https://en.wikipedia.org/wiki/Windows_NT_booting_process (Hint: What really is SYSTEM?)


********************************************************* SOLUTION ********************************************************

ntoskrnl.exe

##########################################################################################################################################
#########################################################                                   ##############################################
#########################################################       WINDOWS BOOT PROCESS        ##############################################
#########################################################                                   ##############################################
##########################################################################################################################################


######################################################### Windows_Boot_Remediate_1 10 #########################################################

The system is booting into safe mode. Identify the flag from the command-line output of the command used to diagnose boot issues.

Follow these instructions to boot the virtual image -- Click Here ---> Windows Bootkit Instructions

********************************************************* SOLUTION ********************************************************

1RF5Zgf9P

· #Launch the virtual machine on MobaXTerm following instructions in windows bootkit instructions

· Bcdedit

· Flag: 1RF5Zgf9P (will see in terminal)



######################################################### Windows_Boot_Remediate_2 10 #########################################################

The system is booting into safe mode. Correct that, and reboot into the desktop. The flag is on the desktop.

Follow these Windows Bootkit Instructions to boot the virtual image

********************************************************* SOLUTION ********************************************************

· bcdedit /deletevalue {current} safeboot

· shutdown /r

· #once the virtual machine shuts down, it doesn’t usually reboot on it’s own - you will have to kill your connection and reboot it using ****qemu-system-x86_64 -m 2G Win_Bootkit.vdi

· #this will take you to your desktop, and the flag is the wallpaper

· Flag: 76Drp6hB 



######################################################### Windows_Boot_Remediate_3 10 #########################################################

Prevent the system restart using the command line, and then identify persistence mechanisms that are reverting the OS and boot loader configurations.

The flag is in the same folder as the persistence mechanism.

HINT: Copy the error message in its entirety to figure out what is happening to the system.

WARNING: You have 30 seconds to comply.

Follow these Windows Bootkit Instructions to boot the virtual image

********************************************************* SOLUTION ********************************************************


$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$


#You must ensure you stop playin when it comes to this problem - you only have 30 seconds

#Virtual machine will restart after last flag because of timeout, IF YOU WERE PLAYIN enter qemu-system-x86_64 -m 2G Win_Bootkit.vdi again

#Immediately open terminal and type “shutdown /a”

#This makes it so the terminal will not time out

#In terminal

sc query state= inactive | find “DISPLAY_NAME”


Flag: AlsKdJfhG

######################################################### Windows_Boot_Remediate_4 10 #########################################################

Run PowerShell... if you can. Resolve PowerShell dependencies.

HINT: Search the entire file system for the PowerShell .dll and copy it back to where it needs to go. It is hidden in China.

The flag is a file in the directory with the .dll

Follow these Windows Bootkit Instructions to boot the virtual image

********************************************************* SOLUTION ********************************************************

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

#Open File Explorer…

#Computer → Local Disk → Windows → System32 → cn-CN

#You will find the System.Management.Automation.dll (ctrl + c to cut)

Flag will be here: Flag: rfVBgtYHn

#The correct path for this file is C:\Windows\Microsoft.NET\assembly\GAC_MSIL\System.Management.Automation\v4.0_3.0.0.0__31bf3856ad364e35

#Paste into correct folder


######################################################### Windows_Boot_Remediate_5 10 #########################################################

Once you fix and launch PowerShell, the console is changed to a custom layout. Figure out what file is causing this, read the file, and inspect the file that it is referencing.

Follow these Windows Bootkit Instructions to boot the virtual image

********************************************************* SOLUTION ********************************************************

C:\Windows\System32


$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
#launch powershell as administrator - it will look weird because it is formatted differently

#Test-Path $profile.AllUsersAllHosts #returns True

#$cd C:\Windows\System32\WindowsPowershell\v1.0 #this takes you to all users, all hosts PSHOME file

#get-content profile.psi

#copy C:\Users\Yin\AppData\Local\Temp\7f7cfb189b822c87a02778a033f4275a.pdf

#paste into file explorer search bar

#PDF will open

#Scroll down to page 2

Flag: 8B7da4v6Y

